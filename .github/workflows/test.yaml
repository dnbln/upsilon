name: Test
on:
  push:
    branches:
    - trunk
    paths:
    - crates/**
    - dev/**
    - Cargo.toml
    - Cargo.lock
    - rustfmt.toml
    - clippy.toml
    - .cargo/**
    - .ci/github-workflows/**
    - .config/nextest.toml
    - .github/workflows/test.yaml
    - schemas/graphql/schema.graphql
  pull_request:
    branches:
    - trunk
env:
  CARGO_TERM_COLOR: always
jobs:
  compile-xtask-linux:
    name: Compile xtask (Linux)
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Install lld
      run: sudo apt-get install -y lld
    - name: Install rust
      run: rustup toolchain install nightly --no-self-update && rustup default nightly
    - name: Compile xtask
      run: cargo build -p upsilon-xtask --bin upsilon-xtask --verbose
    - name: Copy xtask to artifact
      run: mkdir -p ci-artifacts && cp target/debug/upsilon-xtask ci-artifacts/upsilon-xtask
    - name: Upload xtask
      uses: actions/upload-artifact@v3
      with:
        name: ${{ runner.os }}-xtask
        path: ci-artifacts/upsilon-xtask
  style-checks:
    name: Style checks
    runs-on: ubuntu-latest
    needs: compile-xtask-linux
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Install lld
      run: sudo apt-get install -y lld
    - name: Install rust
      run: rustup toolchain install nightly --no-self-update && rustup default nightly
    - name: Install rustfmt
      run: rustup component add rustfmt
    - name: Download xtask
      uses: actions/download-artifact@v3
      with:
        name: ${{ runner.os }}-xtask
        path: ci-artifacts/downloaded-xtask
    - name: Copy downloaded xtask to artifact path
      run: mkdir -p ci-artifacts && cp ci-artifacts/downloaded-xtask/${{ runner.os }}-xtask ci-artifacts/upsilon-xtask
    - name: Run fmt check
      run: ci-artifacts/upsilon-xtask fmt-check
    - name: Git checks
      run: ci-artifacts/upsilon-xtask git-checks --checkout
      if: success() || failure()
    - name: Check Cargo.toml dependencies order
      run: ci-artifacts/upsilon-xtask check-cargo-dep-order
      if: success() || failure()
    - name: Check Cargo.toml dependencies from workspace.dependencies
      run: ci-artifacts/upsilon-xtask check-cargo-dep-from-workspace
      if: success() || failure()
  gql-schema-up-to-date:
    name: GraphQL schema is up-to-date
    runs-on: ubuntu-latest
    needs: compile-xtask-linux
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Install lld
      run: sudo apt-get install -y lld
    - name: Install rust
      run: rustup toolchain install nightly --no-self-update && rustup default nightly
    - name: Download xtask
      uses: actions/download-artifact@v3
      with:
        name: ${{ runner.os }}-xtask
        path: ci-artifacts/downloaded-xtask
    - name: Copy downloaded xtask to artifact path
      run: mkdir -p ci-artifacts && cp ci-artifacts/downloaded-xtask/${{ runner.os }}-xtask ci-artifacts/upsilon-xtask
    - name: Run gql schema check
      run: ci-artifacts/upsilon-xtask graphql-schema-check
  ci-files-up-to-date:
    name: CI files are up-to-date
    runs-on: ubuntu-latest
    needs: compile-xtask-linux
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Install lld
      run: sudo apt-get install -y lld
    - name: Install rust
      run: rustup toolchain install nightly --no-self-update && rustup default nightly
    - name: Download xtask
      uses: actions/download-artifact@v3
      with:
        name: ${{ runner.os }}-xtask
        path: ci-artifacts/downloaded-xtask
    - name: Copy downloaded xtask to artifact path
      run: mkdir -p ci-artifacts && cp ci-artifacts/downloaded-xtask/${{ runner.os }}-xtask ci-artifacts/upsilon-xtask
    - name: Run ci files up to date check
      run: ci-artifacts/upsilon-xtask check-ci-files-up-to-date
  test-win:
    name: Test (Windows)
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Setup env
      run: echo "VCPKG_ROOT=$env:VCPKG_INSTALLATION_ROOT" | Out-File -FilePath $env:GITHUB_ENV -Append
    - name: Install openssl
      run: vcpkg install openssl:x64-windows-static-md
    - name: Cleanup vcpkg build trees
      run: del -Recurse -Force $env:VCPKG_ROOT\\buildtrees
    - name: Install rust
      run: rustup toolchain install nightly --no-self-update && rustup default nightly
    - name: Install nextest
      uses: taiki-e/install-action@nextest
    - name: Print environment
      shell: pwsh
      run: 'ls env:'
    - name: Collect other system information
      run: "\n          git --version\n        "
    - name: Compile xtask
      run: cargo build -p upsilon-xtask --bin upsilon-xtask --verbose
    - name: Copy xtask to artifact
      run: mkdir -p ci-artifacts && cp target/debug/upsilon-xtask ci-artifacts/upsilon-xtask
    - name: Compile binaries and tests
      run: ci-artifacts/upsilon-xtask test --verbose --no-run --profile ci
    - name: Run tests
      run: ci-artifacts/upsilon-xtask test --verbose --no-fail-fast --profile ci
    - name: Run doctests
      run: ci-artifacts/upsilon-xtask test --verbose --no-fail-fast --doc --profile ci
  test-linux:
    name: Test (Linux)
    runs-on: ubuntu-latest
    needs: compile-xtask-linux
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Install lld
      run: sudo apt-get install -y lld
    - name: Install openssl
      run: sudo apt-get install -y libssl-dev
    - name: Install rust
      run: rustup toolchain install nightly --no-self-update && rustup default nightly
    - name: Install nextest
      uses: taiki-e/install-action@nextest
    - name: Print environment
      run: "\n          env\n        "
    - name: Collect other system information
      run: "\n          git --version\n        "
    - name: Download xtask
      uses: actions/download-artifact@v3
      with:
        name: ${{ runner.os }}-xtask
        path: ci-artifacts/downloaded-xtask
    - name: Copy downloaded xtask to artifact path
      run: mkdir -p ci-artifacts && cp ci-artifacts/downloaded-xtask/${{ runner.os }}-xtask ci-artifacts/upsilon-xtask
    - name: Compile binaries and tests
      run: ci-artifacts/upsilon-xtask test --verbose --no-run --profile ci
    - name: Run tests
      run: ci-artifacts/upsilon-xtask test --verbose --no-fail-fast --profile ci
    - name: Run doctests
      run: ci-artifacts/upsilon-xtask test --verbose --no-fail-fast --doc --profile ci
  test-linux-with-difftests:
    name: Test (Linux with difftests)
    runs-on: ubuntu-latest
    needs: compile-xtask-linux
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Install lld
      run: sudo apt-get install -y lld
    - name: Install openssl
      run: sudo apt-get install -y libssl-dev
    - name: Install rust
      run: rustup toolchain install nightly --no-self-update && rustup default nightly
    - name: Install nextest
      uses: taiki-e/install-action@nextest
    - name: Print environment
      run: "\n          env\n        "
    - name: Collect other system information
      run: "\n          git --version\n        "
    - name: Download xtask
      uses: actions/download-artifact@v3
      with:
        name: ${{ runner.os }}-xtask
        path: ci-artifacts/downloaded-xtask
    - name: Copy downloaded xtask to artifact path
      run: mkdir -p ci-artifacts && cp ci-artifacts/downloaded-xtask/${{ runner.os }}-xtask ci-artifacts/upsilon-xtask
    - name: Compile binaries and tests (with difftests)
      run: ci-artifacts/upsilon-xtask test --verbose --no-run --profile difftests
    - name: Run tests (with difftests)
      run: ci-artifacts/upsilon-xtask test --verbose --no-fail-fast --profile difftests
  test-linux-only-difftests:
    name: Test (Linux only difftests)
    runs-on: ubuntu-latest
    needs: compile-xtask-linux
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0
    - name: Get old commit
      id: get-old-commit
      run: "\n    if [ \"$PUSH_BEFORE\" != \"\" ]; then\n        echo \"OLD_COMMIT=$PUSH_BEFORE\" >> $GITHUB_OUTPUT\n    else\n        if [ \"$PULL_REQUEST_BASE_SHA\" != \"\" ]; then\n            echo \"OLD_COMMIT=$PULL_REQUEST_BASE_SHA\" >> $GITHUB_OUTPUT\n        else\n            echo \"Error: neither PUSH_BEFORE nor PULL_REQUEST_BASE_SHA is set\" >&2\n            exit 1\n        fi\n    fi\n  "
      env:
        PUSH_BEFORE: ${{ github.event.before }}
        PULL_REQUEST_BASE_SHA: ${{ github.event.pull_request.base.sha }}
    - name: Install lld
      run: sudo apt-get install -y lld
    - name: Install openssl
      run: sudo apt-get install -y libssl-dev
    - name: Install rust
      run: rustup toolchain install nightly --no-self-update && rustup default nightly
    - name: Install nextest
      uses: taiki-e/install-action@nextest
    - name: Print environment
      run: "\n          env\n        "
    - name: Collect other system information
      run: "\n          git --version\n        "
    - name: Download xtask
      uses: actions/download-artifact@v3
      with:
        name: ${{ runner.os }}-xtask
        path: ci-artifacts/downloaded-xtask
    - name: Copy downloaded xtask to artifact path
      run: mkdir -p ci-artifacts && cp ci-artifacts/downloaded-xtask/${{ runner.os }}-xtask ci-artifacts/upsilon-xtask
    - name: Compile binaries and tests (with difftests)
      run: ci-artifacts/upsilon-xtask test --verbose --no-run --profile difftests
    - name: Run tests (only difftests)
      run: ci-artifacts/upsilon-xtask test-quick --from-index --verbose --no-fail-fast --profile difftests --algo git-diff-files --commit ${{ steps.get-old-commit.outputs.OLD_COMMIT }}
  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: compile-xtask-linux
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Install lld
      run: sudo apt-get install -y lld
    - name: Install openssl
      run: sudo apt-get install -y libssl-dev
    - name: Install rust
      run: rustup toolchain install nightly --no-self-update && rustup default nightly
    - name: Install clippy
      run: rustup component add clippy
    - name: Download xtask
      uses: actions/download-artifact@v3
      with:
        name: ${{ runner.os }}-xtask
        path: ci-artifacts/downloaded-xtask
    - name: Copy downloaded xtask to artifact path
      run: mkdir -p ci-artifacts && cp ci-artifacts/downloaded-xtask/${{ runner.os }}-xtask ci-artifacts/upsilon-xtask
    - name: Lint
      run: ci-artifacts/upsilon-xtask lint
