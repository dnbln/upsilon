/*
 *        Copyright (c) 2022 Dinu Blanovschi
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        https://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

use std::fmt::Write;
use std::path::PathBuf;

fn main() {
    let target_file = PathBuf::from(
        std::env::args()
            .skip(1)
            .next()
            .expect("Missing path to file"),
    );

    let header =
        //language=dart
        r#"
// GENERATED CODE - DO NOT MODIFY BY HAND
// The code was generated by the "gen-dart-models" xtask
//
// To regenerate, run:
// cargo xtask gen-dart-models
//
// For changes to model classes in structs sent over the API,
// perform the changes in the `upsilon-api-models` crate,
// and regenerate.
"#;

    let mut file_contents = String::from(header);

    for class in upsilon_procx::dart_model_classes_iter!(upsilon_api_models_protobuf) {
        let class: &fn() -> (&'static str, &'static str) = class;
        let (_name, dart_class_decl) = class();

        write!(&mut file_contents, "{}\n\n\n", dart_class_decl).unwrap();
    }

    std::fs::write(target_file, file_contents).expect("Cannot write");
}
